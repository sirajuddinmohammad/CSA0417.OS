#include <stdio.h>
#include <stdlib.h>

int cmpfunc(const void *a, const void *b) {
    return (*(int *)a - *(int *)b);
}

int CLOOK(int tracks[], int n, int start) {
    int head_movement = 0;
    int current_track = start;
    int i, j;
    qsort(tracks, n, sizeof(int), cmpfunc);
    for (i = 0; i < n; i++) {
        if (tracks[i] == start)
            break;
    }
    for (j = i; j < n; j++) {
        head_movement += abs(tracks[j] - current_track);
        current_track = tracks[j];
    }
    head_movement += abs(tracks[n - 1] - tracks[0]);
    current_track = tracks[0];
    for (j = 1; j < i; j++) {
        head_movement += abs(tracks[j] - current_track);
        current_track = tracks[j];
    }

    return head_movement;
}

int main() {
    int tracks[] = {55, 58, 60, 70, 18};
    int num_tracks = sizeof(tracks) / sizeof(tracks[0]);
    int start_track = 50;  

    int average_head_movement = CLOOK(tracks, num_tracks, start_track) / num_tracks;

    printf("Average Head Movement: %d\n", average_head_movement);

    return 0;
}
